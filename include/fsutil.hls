#                                                 Sun 31 Mar 2013 01:54:28 PM BRT
#
#                              Copyright (C) 2013 by Rafael Santiago
#
# This is free software. You can redistribute it and/or modify under
# the terms of the GNU General Public License version 2.
#
# "fsutil.hls"
#
# Description: filesystem common utilities.
#

#
# Returns 1 if the directory path exists.
#
# @path = directory name, path...;
#
function isdir(path type string) : result type int {
    var old_cwd type string;
    var exists type int;
    $exists = 0;
    $old_cwd = hefesto.sys.pwd();
    hefesto.sys.cd($path);
    if (hefesto.sys.os_name() != "windows") {
        if (hefesto.sys.pwd() == $path) {
            $exists = 1;
        }
    } else {
        if (hefesto.sys.pwd() == $path ||
            hefesto.sys.pwd() == ($path + "\\")) {
            $exists = 1;
        }
    }
    hefesto.sys.cd($old_cwd);
    result $exists;
}

#
# Returns 1 if the path is a file.
#
# @fpath = the file path;
#
function isfile(fpath type string) : result type int {
    var is type int;
    $is = 0;
    if (isdir($fpath) == 0) {
        var fp type file;
        $fp = hefesto.sys.fopen($fpath, "r");
        $is = ($fp != 0);
        if ($is == 1) {
            hefesto.sys.fclose($fp);
        }
    }
    result $is;
}

#
# Makes the passed dirtree, returning 1 on success otherwise 0.
#
# @path = the dirtree;
#
function mktree(path type string) : result type int {
    var path_elements type list;
    var p type int;
    var p_sz type int;
    var temp type string;
    var path_sep type string;
    var res type int;
    var cwd type string;
    var fullpath type string;

    $temp = hefesto.sys.os_name();
    if ($temp == "linux" || $temp == "freebsd") {
        $path_sep = "/";
    } else {
        $path_sep = "\\";
    }
    $temp = "";

    $p = 1;
    $p_sz = $path.len();

    $temp = $temp + $path.at(0);

    while ($p < $p_sz) {
        if ($path.at($p) != $path_sep) {
            $temp = $temp + $path.at($p);
        } else {
            $path_elements.add_item($temp);
            $temp = "";
        }
        $p = $p + 1;
    }

    if ($temp != "") $path_elements.add_item($temp);

    $p_sz = $path_elements.count();
    $p = 0;
    $temp = "";
    $fullpath = "";
    $res = 1;

    $cwd = hefesto.sys.pwd();

    while ($p < $p_sz && $res == 1) {
        $temp = $path_elements.item($p);
        if (isdir($temp) == 0) {
            if (hefesto.sys.mkdir($path_elements.item($p)) != 0) $res = 0;
        }
        if ($fullpath.len() > 0) {
            $fullpath = $fullpath + $path_sep + $temp;
        } else {
            $fullpath = $temp;
        }
        $res = hefesto.sys.cd($temp);
        $p = $p + 1;
    }

    hefesto.sys.cd($cwd);

    result $res;
}

#
# Removes an empty dirtree, returning 1 on success 0 on fail.
#
# @dtree = the dirtree;
#
function rmtree(dtree type string) : result type int {
    var dtemp type string;
    var d type int;
    var d_elements type list;
    var sep type string;
    var all_removed type int;
    if (hefesto.sys.os_name() == "windows") {
        $sep = "\\";
    } else {
        $sep = "/";
    }
    $d = 0;
    while ($d < $dtree.len()) {
        if ($dtree.at($d) == $sep) {
            if ($dtree.at($d-1) == ":") {
                $dtemp = $dtemp + $dtree.at($d);
            } else {
                $d_elements.add_item($dtemp);
                $dtemp = "";
            }
        } else {
            $dtemp = $dtemp + $dtree.at($d);
        }
        $d = $d + 1;
    }
    if ($dtemp.len() > 0) $d_elements.add_item($dtemp);
    $all_removed = 1;
    while ($all_removed == 1 &&
           $d_elements.count() > 0) {
        $dtemp = "";
        $d = 0;
        while ($d < $d_elements.count()) {
            if ($dtemp.len() > 0)
                $dtemp = $dtemp + $sep + $d_elements.item($d);
            else
                $dtemp = $d_elements.item($d);
            $d = $d + 1;
        }
        $all_removed = (hefesto.sys.rmdir($dtemp) == 0);
        $d = $d_elements.count()-1;
        $dtemp = $d_elements.item($d);
        $d_elements.del_item($dtemp);
    }
    result $all_removed;
}
